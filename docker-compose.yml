version: '3.7'

services:
  h2: # db 서비스
    platform: linux/amd64 # MAC M1
    build:
      context: ./h2
      dockerfile: ./h2.Dockerfile
    ports: # 포트포워딩
      - "8092:8092" # TCP 포트 : 데이터베이스 연결 포트
      - "8082:8082" # HTTP 포트 : 웹콘솔 연결 포트
    restart: always # 컨테이너 종료시 자동 재실행
    volumes:
      - ~/h2_localdb:/opt/h2-data # 호스트와 컨테이너의 볼륨 마운트
    networks:
      - local-network
  jaeger:
    image: jaegertracing/all-in-one:1.55
    restart: on-failure
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
    networks:
      - local-network

  vault-server:
    image: hashicorp/vault
    restart: on-failure
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
      - local-network

  kafka:
    image: confluentinc/cp-kafka
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://127.0.0.1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - local-network

  zookeeper:
    image: confluentinc/cp-zookeeper
    restart: on-failure
    platform: linux/amd64 # MAC M1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - local-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: on-failure
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    ports:
      - "8081:8080"
    depends_on:
      - kafka
    networks:
      - local-network
  db:
    image: mysql
    restart: on-failure
    environment:
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev123!
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
      - "3307:3306"
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_bin"
    networks:
      - local-network
  redis:
    image: redis
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      - local-network
networks:
  local-network:
    driver: bridge
